/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.1.28
 * Generated at: 2024-10-14 00:01:33 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.views.common;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;

public final class footer_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("<!DOCTYPE html>\r\n");
      out.write("\r\n");
      out.write("	\r\n");
      out.write("	");

   String contextPath = request.getContextPath();

      out.write("\r\n");
      out.write("<html lang=\"ko\">\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("<title>Document</title>\r\n");
      out.write("<!--css-->\r\n");
      out.write("<link rel=\"stylesheet\" href=\"./views/common/css/footer.css\">\r\n");
      out.write("\r\n");
      out.write("<style>\r\n");
      out.write("#footer-container {\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#footer{\r\n");
      out.write("    width: 100%;height: 250px;\r\n");
      out.write("    background-color: #03045E;\r\n");
      out.write("    color: #fff;\r\n");
      out.write("    margin: 0;\r\n");
      out.write("}\r\n");
      out.write("#footer-con{\r\n");
      out.write("    width: 100%; height: 200px;\r\n");
      out.write("    padding-top: 30px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#footer>div{\r\n");
      out.write("    width: 100%;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#footer_1{\r\n");
      out.write("    height: 55px;\r\n");
      out.write("    display: flex;\r\n");
      out.write("    flex-direction: row;\r\n");
      out.write("    justify-content: flex-start;\r\n");
      out.write("    align-items: center;\r\n");
      out.write("    gap: 10px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#footer_1>a{\r\n");
      out.write("    text-decoration: none;\r\n");
      out.write("    color: #fff;\r\n");
      out.write("    font-size: 16px;\r\n");
      out.write("    font-weight: 500;\r\n");
      out.write("    padding-left: 40px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#footer_2{\r\n");
      out.write("    padding-left: 40px;\r\n");
      out.write("    position: relative;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#footer_2>p{\r\n");
      out.write("    width: 100%;\r\n");
      out.write("    font-size: 12px;\r\n");
      out.write("    font-weight: 500;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#footer_2>p:nth-child(1){\r\n");
      out.write("    font-size: 14px;\r\n");
      out.write("}\r\n");
      out.write("#footer-info{\r\n");
      out.write("    margin-left: 40px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#footer_2 > p:last-child{\r\n");
      out.write("    width: 98%;\r\n");
      out.write("    font-size: 11px;\r\n");
      out.write("    text-align: right;\r\n");
      out.write("    padding-top: 20px;\r\n");
      out.write("    padding-right: 40px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#footer-logo{\r\n");
      out.write("    max-width: 150px; /* 로고 크기 조정 */\r\n");
      out.write("    height: auto;\r\n");
      out.write("    margin-bottom: 10px;\r\n");
      out.write("    position: absolute;\r\n");
      out.write("    right: 40px;\r\n");
      out.write("    top: -30px;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	<div id=\"footer-container\">\r\n");
      out.write("		<div id=\"footer\">\r\n");
      out.write("			<div id=\"footer_1\">\r\n");
      out.write("				<a href=\"\">이용약관</a> | <a href=\"\">개인정보처리방침</a> | <a href=\"\">위치기반서비스이용약관</a>\r\n");
      out.write("				| <a href=\"\">저작권정책</a> | <a href=\"\">Q&A</a>\r\n");
      out.write("			</div>\r\n");
      out.write("			<div id=\"footer_2\">\r\n");
      out.write("				<p>KH정보교육원 ｜ 사업자등록번호 : 980-86-2633 ｜ 사업자등록번호 : 285-40-7633 ｜ 서울\r\n");
      out.write("					강남 제2014-01호 ｜ 대표자 : 김가영 ｜ 책임자 : 김민재 ｜ 개인정보관리책임자 : 신서희</p>\r\n");
      out.write("				<p>\r\n");
      out.write("					강남지원 256관 : 서울특별시 강남구 테헤란로14길 6 남도빌딩 2F, 3F, 4F, 5F, 6F <br>\r\n");
      out.write("					강남지원 2관 : 서울특별시 강남구 테헤란로10길 9 그랑프리 빌딩 4F, 5F, 7F <br> 강남지원 3관\r\n");
      out.write("					: 서울특별시 강남구 테헤란로 130 호산빌딩 5F, 6F <br> 종로지원 : 서울특별시 중구 남대문로 120\r\n");
      out.write("					그레이츠 청계(구 대일빌딩) 2F, 3F <br> 당산지원 : 서울특별시 영등포구 선유동2로 57\r\n");
      out.write("					이레빌딩(구관) 19F, 20F <br>\r\n");
      out.write("				</p>\r\n");
      out.write("			<div id=\"footer-info\">\r\n");
      out.write("                <img src=\"");
      out.print(contextPath );
      out.write("/resource/footerLogo.png\" alt=\"Trafi Logo\" id=\"footer-logo\">\r\n");
      out.write("            </div>\r\n");
      out.write("				<p>Copyright © 2024-2024 Trafi Information Educational Institute\r\n");
      out.write("					All Right Reserved</p>\r\n");
      out.write("			</div>\r\n");
      out.write("		</div>\r\n");
      out.write("	</div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
