/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.1.28
 * Generated at: 2024-10-14 00:26:06 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.views.sub;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;

public final class sub_005fmycourse2_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/WEB-INF/lib/jakarta.servlet.jsp.jstl-3.0.1.jar", Long.valueOf(1728863602318L));
    _jspx_dependants.put("jar:file:/C:/workspace/8_MyBatics/Skt/src/main/webapp/WEB-INF/lib/jakarta.servlet.jsp.jstl-3.0.1.jar!/META-INF/c-1_2.tld", Long.valueOf(1664421078000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fchoose;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fotherwise;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fif_0026_005ftest;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems;

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fchoose = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fotherwise = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fchoose.release();
    _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.release();
    _005fjspx_005ftagPool_005fc_005fotherwise.release();
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.release();
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.release();
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");

String contextPath = request.getContextPath();

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("<title>나만의 여행코스 만들기</title>\r\n");
      out.write("<link rel=\"stylesheet\" href=\"./mycourse.css\">\r\n");
      out.write("<link rel=\"stylesheet\"\r\n");
      out.write("	href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.6.0/css/all.min.css\"\r\n");
      out.write("	integrity=\"sha512-Kc323vGBEqzTmouAECnVceyQqyqdsSiqLQISBL29aUW4U/M7pSPA/gEUZQqv1cwx4OnYxTxve5UMg5GT6L4JJg==\"\r\n");
      out.write("	crossorigin=\"anonymous\" referrerpolicy=\"no-referrer\" />\r\n");
      out.write("<link rel=\"preconnect\" href=\"https://fonts.googleapis.com\">\r\n");
      out.write("<link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin>\r\n");
      out.write("<link\r\n");
      out.write("	href=\"https://fonts.googleapis.com/css2?family=Noto+Sans+KR:wght@100..900&display=swap\"\r\n");
      out.write("	rel=\"stylesheet\">\r\n");
      out.write("<script src=\"https://code.jquery.com/jquery-3.7.1.min.js\"\r\n");
      out.write("	integrity=\"sha256-/JqT3SQfawRcv/BIHPThkBvs0OEvtFFmqPF/lYI/Cxo=\"\r\n");
      out.write("	crossorigin=\"anonymous\"></script>\r\n");
      out.write("<script src=\"https://code.jquery.com/ui/1.14.0/jquery-ui.min.js\"\r\n");
      out.write("	integrity=\"sha256-Fb0zP4jE3JHqu+IBB9YktLcSjI1Zc6J2b6gTjB0LpoM=\"\r\n");
      out.write("	crossorigin=\"anonymous\"></script>\r\n");
      out.write("<script\r\n");
      out.write("	src=\"https://cdnjs.cloudflare.com/ajax/libs/html2canvas/1.4.1/html2canvas.min.js\"></script>\r\n");
      out.write("<script\r\n");
      out.write("	src=\"https://cdnjs.cloudflare.com/ajax/libs/html2pdf.js/0.10.1/html2pdf.bundle.min.js\"></script>\r\n");
      out.write("<script src=\"./mycourse.js\"></script>\r\n");
      out.write("\r\n");
      out.write("<style>\r\n");
      out.write("body {\r\n");
      out.write("	margin: 0 auto;\r\n");
      out.write("	overflow-x: hidden;\r\n");
      out.write("}\r\n");
      out.write(".wrap {\r\n");
      out.write("	width: 100%;\r\n");
      out.write("	display: flex;\r\n");
      out.write("	justify-content: center;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("header h1 {\r\n");
      out.write("	text-align: center;\r\n");
      out.write("	color: #333;\r\n");
      out.write("	margin-bottom: 20px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".planner {\r\n");
      out.write("	width: 1184px;\r\n");
      out.write("	max-width: 1284px;\r\n");
      out.write("	margin: 50px;\r\n");
      out.write("	padding: 10px;\r\n");
      out.write("	display: flex;\r\n");
      out.write("	justify-content: space-between;\r\n");
      out.write("	height: 650px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".course-details, .preview-list {\r\n");
      out.write("	width: 42%;\r\n");
      out.write("	background-color: #f0f0f0;\r\n");
      out.write("	padding: 15px;\r\n");
      out.write("	border-radius: 10px;\r\n");
      out.write("	overflow-y: auto;\r\n");
      out.write("	max-height: 100%;\r\n");
      out.write("	padding: 40px;\r\n");
      out.write("	background-color: #ffffff;\r\n");
      out.write("	box-shadow: 0px 10px 10px rgba(0, 0, 0, 0.1);\r\n");
      out.write("	border-radius: 26px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".preview-list h2 {\r\n");
      out.write("	font-size: 18px;\r\n");
      out.write("	margin-bottom: 30px;\r\n");
      out.write("	background-color: #FFC3C3;\r\n");
      out.write("	border-radius: 50px;\r\n");
      out.write("	padding: 10px;\r\n");
      out.write("	text-align: center;\r\n");
      out.write("	border-radius: 50px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".course-header h2 {\r\n");
      out.write("	font-size: 18px;\r\n");
      out.write("	margin-bottom: 30px;\r\n");
      out.write("	background-color: #FFC3C3;\r\n");
      out.write("	border-radius: 50px;\r\n");
      out.write("	text-align: center;\r\n");
      out.write("	border-radius: 50px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".course-header h2 input {\r\n");
      out.write("	padding: 10px 0;\r\n");
      out.write("	width: 100%;\r\n");
      out.write("	height: 100%;\r\n");
      out.write("	font-size: 18px;\r\n");
      out.write("	border: none;\r\n");
      out.write("	border-radius: 50px;\r\n");
      out.write("	background-color: #33333300;\r\n");
      out.write("	text-align: center;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".day {\r\n");
      out.write("	margin-bottom: 20px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".day h3 {\r\n");
      out.write("	text-align: center;\r\n");
      out.write("	padding-bottom: 5px;\r\n");
      out.write("	margin-bottom: 5px;\r\n");
      out.write("	border-bottom: #5bc0de solid 2px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".time-place {\r\n");
      out.write("	display: flex;\r\n");
      out.write("	justify-content: space-around;\r\n");
      out.write("	margin-bottom: 5px;\r\n");
      out.write("	background-color: #DFF0FF;\r\n");
      out.write("	padding: 10px;\r\n");
      out.write("	border-radius: 50px;\r\n");
      out.write("	margin: 10px 0;\r\n");
      out.write("	font-size: 15px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".actions {\r\n");
      out.write("	display: flex;\r\n");
      out.write("	justify-content: space-between;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".actions button {\r\n");
      out.write("	padding: 10px 15px;\r\n");
      out.write("	border: none;\r\n");
      out.write("	border-radius: 5px;\r\n");
      out.write("	cursor: pointer;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".plus {\r\n");
      out.write("	width: 30%;\r\n");
      out.write("	position: relative;\r\n");
      out.write("	position: absolute;\r\n");
      out.write("	left: 130px;\r\n");
      out.write("	top: 755px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".plus img {\r\n");
      out.write("	margin: 0 auto;\r\n");
      out.write("	width: 8%;\r\n");
      out.write("	height: 8%;\r\n");
      out.write("	display: flex;\r\n");
      out.write("	background-color: #FFC3C3;\r\n");
      out.write("	border-radius: 50px;\r\n");
      out.write("	padding: 5px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".actions button {\r\n");
      out.write("	border-radius: 10px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".preview-list .preview-item {\r\n");
      out.write("	margin-bottom: 15px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".preview-list img {\r\n");
      out.write("	width: 80%;\r\n");
      out.write("	border-radius: 5px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".preview-item p {\r\n");
      out.write("	text-align: center;\r\n");
      out.write("	margin-top: 5px;\r\n");
      out.write("	margin-bottom: 5px;\r\n");
      out.write("	color: #333;\r\n");
      out.write("	text-align: left;\r\n");
      out.write("	font-weight: 900;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".course-details::-webkit-scrollbar, .preview-list::-webkit-scrollbar {\r\n");
      out.write("	width: 15px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".course-details::-webkit-scrollbar-thumb, .preview-list::-webkit-scrollbar-thumb\r\n");
      out.write("	{\r\n");
      out.write("	background-color: #afaeae;\r\n");
      out.write("	border-radius: 10px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".course-details::-webkit-scrollbar-track, .preview-list::-webkit-scrollbar-track\r\n");
      out.write("	{\r\n");
      out.write("	background-color: #f0f0f0;\r\n");
      out.write("	border-radius: 10px;\r\n");
      out.write("	margin-right: 30px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".content-footer {\r\n");
      out.write("	position: absolute;\r\n");
      out.write("	bottom: 20px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".content-footer button {\r\n");
      out.write("	padding: 10px 20px;\r\n");
      out.write("	font-size: 16px;\r\n");
      out.write("	cursor: pointer;\r\n");
      out.write("	border: none;\r\n");
      out.write("	border-radius: 50px;\r\n");
      out.write("	background-color: #FFC3C3;\r\n");
      out.write("	color: white;\r\n");
      out.write("	width: 200px;\r\n");
      out.write("	margin: 0 auto;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".content-footer button:hover {\r\n");
      out.write("	background-color: rgb(255, 162, 162);\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".action-buttons {\r\n");
      out.write("	width: 200px;\r\n");
      out.write("	display: flex;\r\n");
      out.write("	justify-content: space-between;\r\n");
      out.write("	background-color: #ffffff;\r\n");
      out.write("	padding: 10px;\r\n");
      out.write("	border-radius: 50px;\r\n");
      out.write("	position: absolute;\r\n");
      out.write("	top: 30px;\r\n");
      out.write("	right: 70px;\r\n");
      out.write("	margin: 1px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".action-buttons button {\r\n");
      out.write("	padding: 10px 15px;\r\n");
      out.write("	border: none;\r\n");
      out.write("	border-radius: 50px;\r\n");
      out.write("	background-color: #FFC3C3;\r\n");
      out.write("	color: white;\r\n");
      out.write("	cursor: pointer;\r\n");
      out.write("	font-size: 16px;\r\n");
      out.write("	display: flex;\r\n");
      out.write("	align-items: center;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".action-buttons button:hover {\r\n");
      out.write("	background-color: rgb(255, 162, 162);\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".time-place input {\r\n");
      out.write("	width: 50%;\r\n");
      out.write("	text-align: center;\r\n");
      out.write("	border: none;\r\n");
      out.write("	background-color: #f9f9f900;\r\n");
      out.write("	padding: 0px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".time-place p {\r\n");
      out.write("	width: 50%;\r\n");
      out.write("	text-align: center;\r\n");
      out.write("	border: none;\r\n");
      out.write("	background-color: #f9f9f900;\r\n");
      out.write("	margin: 0;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".delete-icon {\r\n");
      out.write("	font-size: 20px;\r\n");
      out.write("	color: #5a5a5a;\r\n");
      out.write("	margin-left: 10px;\r\n");
      out.write("	cursor: pointer;\r\n");
      out.write("	transition: color 0.3s ease;\r\n");
      out.write("	display: flex;\r\n");
      out.write("	align-items: center;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".delete-icon:hover {\r\n");
      out.write("	color: #fd6d6d;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".login-button {\r\n");
      out.write("    background-color: #87CEEB;  /* 버튼 배경을 밝은 하늘색으로 설정 */\r\n");
      out.write("    color: white;  /* 텍스트 색상 */\r\n");
      out.write("    font-size: 18px;\r\n");
      out.write("    padding: 10px 20px;\r\n");
      out.write("    border: none;\r\n");
      out.write("    border-radius: 5px;\r\n");
      out.write("    cursor: pointer;\r\n");
      out.write("    box-shadow: 0px 4px 6px rgba(0, 0, 0, 0.1);\r\n");
      out.write("    transition: background-color 0.3s ease;\r\n");
      out.write("    \r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".login-button:hover {\r\n");
      out.write("    background-color: #5dade2;  /* 버튼 호버시 더 어두운 하늘색 */\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("	");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/views/common/menubar.jsp", out, false);
      out.write("\r\n");
      out.write("	<br>\r\n");
      out.write("	<br>\r\n");
      out.write("	<br>\r\n");
      out.write("	<br>\r\n");
      out.write("	<br>\r\n");
      out.write("	<div class=\"wrap\">\r\n");
      out.write("		<div class=\"planner\">\r\n");
      out.write("			<div class=\"course-details\" id=\"contentToSave\">\r\n");
      out.write("				<!-- ID 추가 -->\r\n");
      out.write("				<div class=\"course-header\">\r\n");
      out.write("					<h2>\r\n");
      out.write("						<input type=\"text\" placeholder=\"제목을 입력하세요\">\r\n");
      out.write("					</h2>\r\n");
      out.write("				</div>\r\n");
      out.write("				<div class=\"plus\">\r\n");
      out.write("					<img src=\"./views/sub/img/plusImg.png\" alt=\"\">\r\n");
      out.write("				</div>\r\n");
      out.write("				<div class=\"actions\">\r\n");
      out.write("					<!-- 추가 버튼들 -->\r\n");
      out.write("				</div>\r\n");
      out.write("			</div>\r\n");
      out.write("\r\n");
      out.write("			<div class=\"preview-list\">\r\n");
      out.write("				<h2>나의 관심목록</h2>\r\n");
      out.write("\r\n");
      out.write("				");
      //  c:choose
      org.apache.taglibs.standard.tag.common.core.ChooseTag _jspx_th_c_005fchoose_005f0 = (org.apache.taglibs.standard.tag.common.core.ChooseTag) _005fjspx_005ftagPool_005fc_005fchoose.get(org.apache.taglibs.standard.tag.common.core.ChooseTag.class);
      boolean _jspx_th_c_005fchoose_005f0_reused = false;
      try {
        _jspx_th_c_005fchoose_005f0.setPageContext(_jspx_page_context);
        _jspx_th_c_005fchoose_005f0.setParent(null);
        int _jspx_eval_c_005fchoose_005f0 = _jspx_th_c_005fchoose_005f0.doStartTag();
        if (_jspx_eval_c_005fchoose_005f0 != jakarta.servlet.jsp.tagext.Tag.SKIP_BODY) {
          do {
            out.write("\r\n");
            out.write("					");
            //  c:when
            org.apache.taglibs.standard.tag.rt.core.WhenTag _jspx_th_c_005fwhen_005f0 = (org.apache.taglibs.standard.tag.rt.core.WhenTag) _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.WhenTag.class);
            boolean _jspx_th_c_005fwhen_005f0_reused = false;
            try {
              _jspx_th_c_005fwhen_005f0.setPageContext(_jspx_page_context);
              _jspx_th_c_005fwhen_005f0.setParent((jakarta.servlet.jsp.tagext.Tag) _jspx_th_c_005fchoose_005f0);
              // /views/sub/sub_mycourse2.jsp(323,5) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
              _jspx_th_c_005fwhen_005f0.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ empty loginUser }", boolean.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
              int _jspx_eval_c_005fwhen_005f0 = _jspx_th_c_005fwhen_005f0.doStartTag();
              if (_jspx_eval_c_005fwhen_005f0 != jakarta.servlet.jsp.tagext.Tag.SKIP_BODY) {
                do {
                  out.write("\r\n");
                  out.write("						<h3 align=\"center\">로그인을 하시면 관심목록과 함께 만들 수 있습니다!\r\n");
                  out.write("						<button style=\"margin-top: 20px;\"class=\"login-button\" onclick=\"window.location.href='");
                  out.print( contextPath );
                  out.write("/intoLogin.co'\">로그인</button></h3>\r\n");
                  out.write("							\r\n");
                  out.write("					");
                  int evalDoAfterBody = _jspx_th_c_005fwhen_005f0.doAfterBody();
                  if (evalDoAfterBody != jakarta.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
                    break;
                } while (true);
              }
              if (_jspx_th_c_005fwhen_005f0.doEndTag() == jakarta.servlet.jsp.tagext.Tag.SKIP_PAGE) {
                return;
              }
              _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.reuse(_jspx_th_c_005fwhen_005f0);
              _jspx_th_c_005fwhen_005f0_reused = true;
            } finally {
              org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fwhen_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fwhen_005f0_reused);
            }
            out.write("\r\n");
            out.write("					");
            if (_jspx_meth_c_005fotherwise_005f0(_jspx_th_c_005fchoose_005f0, _jspx_page_context))
              return;
            out.write("\r\n");
            out.write("				");
            int evalDoAfterBody = _jspx_th_c_005fchoose_005f0.doAfterBody();
            if (evalDoAfterBody != jakarta.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
              break;
          } while (true);
        }
        if (_jspx_th_c_005fchoose_005f0.doEndTag() == jakarta.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return;
        }
        _005fjspx_005ftagPool_005fc_005fchoose.reuse(_jspx_th_c_005fchoose_005f0);
        _jspx_th_c_005fchoose_005f0_reused = true;
      } finally {
        org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fchoose_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fchoose_005f0_reused);
      }
      out.write("\r\n");
      out.write("\r\n");
      out.write("			</div>\r\n");
      out.write("\r\n");
      out.write("			<!-- PDF로 저장 버튼 추가 -->\r\n");
      out.write("			<div class=\"content-footer\"></div>\r\n");
      out.write("		</div>\r\n");
      out.write("	</div>\r\n");
      out.write("	<br><br><br><br><br>\r\n");
      out.write("	 ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/views/common/footer.jsp", out, false);
      out.write("\r\n");
      out.write("	<script>\r\n");
      out.write("    window.onload = function() {\r\n");
      out.write("        // plusImg를 클릭했을 때 두 개의 버튼이 나타나도록 함\r\n");
      out.write("        document.querySelector('.plus img').addEventListener('click', function() {\r\n");
      out.write("            // 이미 버튼이 생성된 경우 중복 생성 방지\r\n");
      out.write("            if (document.querySelector('.action-buttons')) return;\r\n");
      out.write("\r\n");
      out.write("            // 버튼을 추가할 div 생성\r\n");
      out.write("            const actionButtons = document.createElement('div');\r\n");
      out.write("            actionButtons.classList.add('action-buttons');\r\n");
      out.write("\r\n");
      out.write("            const addDayButton = document.createElement('button');\r\n");
      out.write("            addDayButton.textContent = '다음날';\r\n");
      out.write("            addDayButton.classList.add('add-day');\r\n");
      out.write("\r\n");
      out.write("            const addCourseButton = document.createElement('button');\r\n");
      out.write("            addCourseButton.textContent = '다음코스';\r\n");
      out.write("            addCourseButton.classList.add('add-course');\r\n");
      out.write("\r\n");
      out.write("            actionButtons.appendChild(addDayButton);\r\n");
      out.write("            actionButtons.appendChild(addCourseButton);\r\n");
      out.write("\r\n");
      out.write("            // .plus 안에 버튼 추가\r\n");
      out.write("            const plusDiv = document.querySelector('.plus');\r\n");
      out.write("            plusDiv.appendChild(actionButtons);\r\n");
      out.write("\r\n");
      out.write("            // 버튼 스타일 조정\r\n");
      out.write("            actionButtons.style.position = 'absolute';\r\n");
      out.write("\r\n");
      out.write("            // N일차 버튼을 클릭하면 새로운 day를 추가하는 기능\r\n");
      out.write("            addDayButton.addEventListener('click', function() {\r\n");
      out.write("                const courseDetails = document.querySelector('.course-details');\r\n");
      out.write("\r\n");
      out.write("                // 이미 존재하는 일차의 개수를 세고 그 다음 일차를 추가\r\n");
      out.write("                const dayCount = courseDetails.querySelectorAll('.day').length + 1;\r\n");
      out.write("\r\n");
      out.write("                // 새로운 일차를 추가할 div 생성\r\n");
      out.write("                const newDay = document.createElement('div');\r\n");
      out.write("                newDay.classList.add('day');\r\n");
      out.write("\r\n");
      out.write("                // 일차를 위한 제목 생성\r\n");
      out.write("                const newDayTitle = document.createElement('h3');\r\n");
      out.write("                newDayTitle.textContent = dayCount + `일차`;\r\n");
      out.write("\r\n");
      out.write("                // 삭제 아이콘 생성\r\n");
      out.write("                const deleteDayIcon = document.createElement('i');\r\n");
      out.write("                deleteDayIcon.classList.add('fas', 'fa-times', 'delete-icon');\r\n");
      out.write("                deleteDayIcon.style.cursor = 'pointer';\r\n");
      out.write("\r\n");
      out.write("                // 일차 제목 옆에 삭제 아이콘 추가\r\n");
      out.write("                newDayTitle.appendChild(deleteDayIcon);\r\n");
      out.write("                newDay.appendChild(newDayTitle);\r\n");
      out.write("                courseDetails.appendChild(newDay);\r\n");
      out.write("\r\n");
      out.write("                // 삭제 아이콘 클릭 시 일차 삭제 기능\r\n");
      out.write("                deleteDayIcon.addEventListener('click', function() {\r\n");
      out.write("                    newDay.remove();\r\n");
      out.write("                });\r\n");
      out.write("\r\n");
      out.write("                // actionButtons 사라지기\r\n");
      out.write("                actionButtons.remove();\r\n");
      out.write("            });\r\n");
      out.write("\r\n");
      out.write("            // 다음코스 버튼을 클릭하면 time-place를 추가하는 기능\r\n");
      out.write("            addCourseButton.addEventListener('click', function() {\r\n");
      out.write("                const lastDay = document.querySelector('.course-details .day:last-child');\r\n");
      out.write("\r\n");
      out.write("                if (!lastDay) {\r\n");
      out.write("                    alert('먼저 \"다음날\"을 추가하세요.');\r\n");
      out.write("                    return;\r\n");
      out.write("                }\r\n");
      out.write("\r\n");
      out.write("                // 시간과 관광지를 입력할 폼 생성\r\n");
      out.write("                const timePlaceForm = document.createElement('div');\r\n");
      out.write("                timePlaceForm.classList.add('time-place');\r\n");
      out.write("\r\n");
      out.write("                const timeInput = document.createElement('input');\r\n");
      out.write("                timeInput.type = 'text';\r\n");
      out.write("                timeInput.placeholder = '시간 입력 (예: 9:00)';\r\n");
      out.write("\r\n");
      out.write("                const placeInput = document.createElement('input');\r\n");
      out.write("                placeInput.type = 'text';\r\n");
      out.write("                placeInput.placeholder = '관광지/축제 입력';\r\n");
      out.write("\r\n");
      out.write("                // 삭제 아이콘 생성\r\n");
      out.write("                const deleteCourseIcon = document.createElement('i');\r\n");
      out.write("                deleteCourseIcon.classList.add('fas', 'fa-times', 'delete-icon');\r\n");
      out.write("                deleteCourseIcon.style.cursor = 'pointer';\r\n");
      out.write("\r\n");
      out.write("                // 시간과 관광지 폼, 삭제 아이콘을 함께 추가\r\n");
      out.write("                timePlaceForm.appendChild(timeInput);\r\n");
      out.write("                timePlaceForm.appendChild(placeInput);\r\n");
      out.write("                timePlaceForm.appendChild(deleteCourseIcon);\r\n");
      out.write("\r\n");
      out.write("                lastDay.appendChild(timePlaceForm);\r\n");
      out.write("\r\n");
      out.write("                // 삭제 아이콘 클릭 시 해당 코스 삭제 기능\r\n");
      out.write("                deleteCourseIcon.addEventListener('click', function() {\r\n");
      out.write("                    timePlaceForm.remove();\r\n");
      out.write("                });\r\n");
      out.write("\r\n");
      out.write("                actionButtons.remove();\r\n");
      out.write("\r\n");
      out.write("                // 시간 입력 후 엔터를 누르면 텍스트로 변경\r\n");
      out.write("                timeInput.addEventListener('keydown', function(event) {\r\n");
      out.write("                    if (event.key === 'Enter') {\r\n");
      out.write("                        const timeText = document.createElement('p');\r\n");
      out.write("                        timeText.textContent = timeInput.value;\r\n");
      out.write("                        timePlaceForm.replaceChild(timeText, timeInput);\r\n");
      out.write("                    }\r\n");
      out.write("                });\r\n");
      out.write("\r\n");
      out.write("                // 관광지 입력 후 엔터를 누르면 텍스트로 변경\r\n");
      out.write("                placeInput.addEventListener('keydown', function(event) {\r\n");
      out.write("                    if (event.key === 'Enter') {\r\n");
      out.write("                        const placeText = document.createElement('p');\r\n");
      out.write("                        placeText.textContent = placeInput.value;\r\n");
      out.write("                        timePlaceForm.replaceChild(placeText, placeInput);\r\n");
      out.write("                    }\r\n");
      out.write("                });\r\n");
      out.write("            });\r\n");
      out.write("        });\r\n");
      out.write("\r\n");
      out.write("        // PDF로 저장하는 버튼 추가\r\n");
      out.write("        const savePdfButton = document.createElement('button');\r\n");
      out.write("        savePdfButton.textContent = 'PDF로 저장';\r\n");
      out.write("        document.querySelector('.content-footer').appendChild(savePdfButton);\r\n");
      out.write("\r\n");
      out.write("        savePdfButton.addEventListener('click', function() {\r\n");
      out.write("            const contentToSave = document.querySelector('.course-details');\r\n");
      out.write("\r\n");
      out.write("            // 엑스 아이콘과 plus 숨기기\r\n");
      out.write("            const deleteIcons = contentToSave.querySelectorAll('.delete-icon');\r\n");
      out.write("            const plusDiv = document.querySelector('.plus');\r\n");
      out.write("\r\n");
      out.write("            deleteIcons.forEach(icon => icon.style.display = 'none');\r\n");
      out.write("            plusDiv.style.display = 'none';\r\n");
      out.write("\r\n");
      out.write("            // PDF 설정\r\n");
      out.write("            const options = {\r\n");
      out.write("                margin: 0.5,\r\n");
      out.write("                filename: 'course-details.pdf',\r\n");
      out.write("                image: { type: 'jpeg', quality: 0.98 },\r\n");
      out.write("                html2canvas: { scale: 2, backgroundColor: 'white' }, // 배경 흰색\r\n");
      out.write("                jsPDF: { unit: 'in', format: 'letter', orientation: 'portrait' }\r\n");
      out.write("            };\r\n");
      out.write("\r\n");
      out.write("            // PDF로 저장\r\n");
      out.write("            html2pdf().from(contentToSave).set(options).save().then(() => {\r\n");
      out.write("                // 숨긴 요소 다시 보이게 하기\r\n");
      out.write("                deleteIcons.forEach(icon => icon.style.display = 'inline');\r\n");
      out.write("                plusDiv.style.display = 'block';\r\n");
      out.write("            });\r\n");
      out.write("        });\r\n");
      out.write("    };\r\n");
      out.write("\r\n");
      out.write("    </script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fotherwise_005f0(jakarta.servlet.jsp.tagext.JspTag _jspx_th_c_005fchoose_005f0, jakarta.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    jakarta.servlet.jsp.PageContext pageContext = _jspx_page_context;
    jakarta.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:otherwise
    org.apache.taglibs.standard.tag.common.core.OtherwiseTag _jspx_th_c_005fotherwise_005f0 = (org.apache.taglibs.standard.tag.common.core.OtherwiseTag) _005fjspx_005ftagPool_005fc_005fotherwise.get(org.apache.taglibs.standard.tag.common.core.OtherwiseTag.class);
    boolean _jspx_th_c_005fotherwise_005f0_reused = false;
    try {
      _jspx_th_c_005fotherwise_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fotherwise_005f0.setParent((jakarta.servlet.jsp.tagext.Tag) _jspx_th_c_005fchoose_005f0);
      int _jspx_eval_c_005fotherwise_005f0 = _jspx_th_c_005fotherwise_005f0.doStartTag();
      if (_jspx_eval_c_005fotherwise_005f0 != jakarta.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("						");
          if (_jspx_meth_c_005fif_005f0(_jspx_th_c_005fotherwise_005f0, _jspx_page_context))
            return true;
          out.write("\r\n");
          out.write("						");
          if (_jspx_meth_c_005fif_005f1(_jspx_th_c_005fotherwise_005f0, _jspx_page_context))
            return true;
          out.write("\r\n");
          out.write("						<hr style=\"width: 90%;\">\r\n");
          out.write("						");
          if (_jspx_meth_c_005fif_005f2(_jspx_th_c_005fotherwise_005f0, _jspx_page_context))
            return true;
          out.write("\r\n");
          out.write("						");
          if (_jspx_meth_c_005fif_005f3(_jspx_th_c_005fotherwise_005f0, _jspx_page_context))
            return true;
          out.write("\r\n");
          out.write("					");
          int evalDoAfterBody = _jspx_th_c_005fotherwise_005f0.doAfterBody();
          if (evalDoAfterBody != jakarta.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fotherwise_005f0.doEndTag() == jakarta.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fotherwise.reuse(_jspx_th_c_005fotherwise_005f0);
      _jspx_th_c_005fotherwise_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fotherwise_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fotherwise_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f0(jakarta.servlet.jsp.tagext.JspTag _jspx_th_c_005fotherwise_005f0, jakarta.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    jakarta.servlet.jsp.PageContext pageContext = _jspx_page_context;
    jakarta.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f0 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f0_reused = false;
    try {
      _jspx_th_c_005fif_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f0.setParent((jakarta.servlet.jsp.tagext.Tag) _jspx_th_c_005fotherwise_005f0);
      // /views/sub/sub_mycourse2.jsp(329,6) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f0.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${not empty interestedList}", boolean.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f0 = _jspx_th_c_005fif_005f0.doStartTag();
      if (_jspx_eval_c_005fif_005f0 != jakarta.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("							");
          if (_jspx_meth_c_005fforEach_005f0(_jspx_th_c_005fif_005f0, _jspx_page_context))
            return true;
          out.write("\r\n");
          out.write("						");
          int evalDoAfterBody = _jspx_th_c_005fif_005f0.doAfterBody();
          if (evalDoAfterBody != jakarta.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f0.doEndTag() == jakarta.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f0);
      _jspx_th_c_005fif_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fforEach_005f0(jakarta.servlet.jsp.tagext.JspTag _jspx_th_c_005fif_005f0, jakarta.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    jakarta.servlet.jsp.PageContext pageContext = _jspx_page_context;
    jakarta.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:forEach
    org.apache.taglibs.standard.tag.rt.core.ForEachTag _jspx_th_c_005fforEach_005f0 = (org.apache.taglibs.standard.tag.rt.core.ForEachTag) _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.get(org.apache.taglibs.standard.tag.rt.core.ForEachTag.class);
    boolean _jspx_th_c_005fforEach_005f0_reused = false;
    try {
      _jspx_th_c_005fforEach_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fforEach_005f0.setParent((jakarta.servlet.jsp.tagext.Tag) _jspx_th_c_005fif_005f0);
      // /views/sub/sub_mycourse2.jsp(330,7) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f0.setVar("interested");
      // /views/sub/sub_mycourse2.jsp(330,7) name = items type = jakarta.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f0.setItems(new org.apache.jasper.el.JspValueExpression("/views/sub/sub_mycourse2.jsp(330,7) '${interestedList}'",_jsp_getExpressionFactory().createValueExpression(_jspx_page_context.getELContext(),"${interestedList}",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
      int[] _jspx_push_body_count_c_005fforEach_005f0 = new int[] { 0 };
      try {
        int _jspx_eval_c_005fforEach_005f0 = _jspx_th_c_005fforEach_005f0.doStartTag();
        if (_jspx_eval_c_005fforEach_005f0 != jakarta.servlet.jsp.tagext.Tag.SKIP_BODY) {
          do {
            out.write("\r\n");
            out.write("								<div class=\"preview-item\">\r\n");
            out.write("									<img src=\"/Skt/resource/festival/");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${interested.fsImg}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("\"\r\n");
            out.write("										style=\"height: 290px; width: 205px;\" alt=\"축제 이미지\">\r\n");
            out.write("									<div class=\"text\">\r\n");
            out.write("										<strong>");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${interested.fsName}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("</strong><br> 날짜 :\r\n");
            out.write("										");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${interested.fsStart}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("<br> 지역 : ");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${interested.fsArea}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("\r\n");
            out.write("									</div>\r\n");
            out.write("								</div>\r\n");
            out.write("							");
            int evalDoAfterBody = _jspx_th_c_005fforEach_005f0.doAfterBody();
            if (evalDoAfterBody != jakarta.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
              break;
          } while (true);
        }
        if (_jspx_th_c_005fforEach_005f0.doEndTag() == jakarta.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_c_005fforEach_005f0[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_c_005fforEach_005f0.doCatch(_jspx_exception);
      } finally {
        _jspx_th_c_005fforEach_005f0.doFinally();
      }
      _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.reuse(_jspx_th_c_005fforEach_005f0);
      _jspx_th_c_005fforEach_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fforEach_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fforEach_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f1(jakarta.servlet.jsp.tagext.JspTag _jspx_th_c_005fotherwise_005f0, jakarta.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    jakarta.servlet.jsp.PageContext pageContext = _jspx_page_context;
    jakarta.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f1 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f1_reused = false;
    try {
      _jspx_th_c_005fif_005f1.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f1.setParent((jakarta.servlet.jsp.tagext.Tag) _jspx_th_c_005fotherwise_005f0);
      // /views/sub/sub_mycourse2.jsp(341,6) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f1.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${empty interestedList}", boolean.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f1 = _jspx_th_c_005fif_005f1.doStartTag();
      if (_jspx_eval_c_005fif_005f1 != jakarta.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("							<p>관심 있는 축제가 존재하지 않습니다.\r\n");
          out.write("						");
          int evalDoAfterBody = _jspx_th_c_005fif_005f1.doAfterBody();
          if (evalDoAfterBody != jakarta.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f1.doEndTag() == jakarta.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f1);
      _jspx_th_c_005fif_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f1, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f1_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f2(jakarta.servlet.jsp.tagext.JspTag _jspx_th_c_005fotherwise_005f0, jakarta.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    jakarta.servlet.jsp.PageContext pageContext = _jspx_page_context;
    jakarta.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f2 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f2_reused = false;
    try {
      _jspx_th_c_005fif_005f2.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f2.setParent((jakarta.servlet.jsp.tagext.Tag) _jspx_th_c_005fotherwise_005f0);
      // /views/sub/sub_mycourse2.jsp(345,6) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f2.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${not empty interestedListTwo}", boolean.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f2 = _jspx_th_c_005fif_005f2.doStartTag();
      if (_jspx_eval_c_005fif_005f2 != jakarta.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("							");
          if (_jspx_meth_c_005fforEach_005f1(_jspx_th_c_005fif_005f2, _jspx_page_context))
            return true;
          out.write("\r\n");
          out.write("						");
          int evalDoAfterBody = _jspx_th_c_005fif_005f2.doAfterBody();
          if (evalDoAfterBody != jakarta.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f2.doEndTag() == jakarta.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f2);
      _jspx_th_c_005fif_005f2_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f2, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f2_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fforEach_005f1(jakarta.servlet.jsp.tagext.JspTag _jspx_th_c_005fif_005f2, jakarta.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    jakarta.servlet.jsp.PageContext pageContext = _jspx_page_context;
    jakarta.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:forEach
    org.apache.taglibs.standard.tag.rt.core.ForEachTag _jspx_th_c_005fforEach_005f1 = (org.apache.taglibs.standard.tag.rt.core.ForEachTag) _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.get(org.apache.taglibs.standard.tag.rt.core.ForEachTag.class);
    boolean _jspx_th_c_005fforEach_005f1_reused = false;
    try {
      _jspx_th_c_005fforEach_005f1.setPageContext(_jspx_page_context);
      _jspx_th_c_005fforEach_005f1.setParent((jakarta.servlet.jsp.tagext.Tag) _jspx_th_c_005fif_005f2);
      // /views/sub/sub_mycourse2.jsp(346,7) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f1.setVar("interestedTwo");
      // /views/sub/sub_mycourse2.jsp(346,7) name = items type = jakarta.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f1.setItems(new org.apache.jasper.el.JspValueExpression("/views/sub/sub_mycourse2.jsp(346,7) '${interestedListTwo}'",_jsp_getExpressionFactory().createValueExpression(_jspx_page_context.getELContext(),"${interestedListTwo}",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
      int[] _jspx_push_body_count_c_005fforEach_005f1 = new int[] { 0 };
      try {
        int _jspx_eval_c_005fforEach_005f1 = _jspx_th_c_005fforEach_005f1.doStartTag();
        if (_jspx_eval_c_005fforEach_005f1 != jakarta.servlet.jsp.tagext.Tag.SKIP_BODY) {
          do {
            out.write("\r\n");
            out.write("								<div class=\"preview-item\">\r\n");
            out.write("									<img src=\"/Skt/resource/tourThumb/");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${interestedTwo.tourImg}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("\"\r\n");
            out.write("										alt=\"투어 이미지\">\r\n");
            out.write("									<div class=\"text\">\r\n");
            out.write("										<strong>");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${interestedTwo.tourName}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("</strong><br> 테마 :\r\n");
            out.write("										");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${interestedTwo.tourTema}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("<br> 계절 :\r\n");
            out.write("										");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${interestedTwo.tourSeason}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("\r\n");
            out.write("									</div>\r\n");
            out.write("								</div>\r\n");
            out.write("							");
            int evalDoAfterBody = _jspx_th_c_005fforEach_005f1.doAfterBody();
            if (evalDoAfterBody != jakarta.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
              break;
          } while (true);
        }
        if (_jspx_th_c_005fforEach_005f1.doEndTag() == jakarta.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_c_005fforEach_005f1[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_c_005fforEach_005f1.doCatch(_jspx_exception);
      } finally {
        _jspx_th_c_005fforEach_005f1.doFinally();
      }
      _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.reuse(_jspx_th_c_005fforEach_005f1);
      _jspx_th_c_005fforEach_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fforEach_005f1, _jsp_getInstanceManager(), _jspx_th_c_005fforEach_005f1_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f3(jakarta.servlet.jsp.tagext.JspTag _jspx_th_c_005fotherwise_005f0, jakarta.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    jakarta.servlet.jsp.PageContext pageContext = _jspx_page_context;
    jakarta.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f3 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f3_reused = false;
    try {
      _jspx_th_c_005fif_005f3.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f3.setParent((jakarta.servlet.jsp.tagext.Tag) _jspx_th_c_005fotherwise_005f0);
      // /views/sub/sub_mycourse2.jsp(358,6) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f3.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${empty interestedListTwo}", boolean.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f3 = _jspx_th_c_005fif_005f3.doStartTag();
      if (_jspx_eval_c_005fif_005f3 != jakarta.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("							<p>관심 있는 투어가 존재하지 않습니다.\r\n");
          out.write("						");
          int evalDoAfterBody = _jspx_th_c_005fif_005f3.doAfterBody();
          if (evalDoAfterBody != jakarta.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f3.doEndTag() == jakarta.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f3);
      _jspx_th_c_005fif_005f3_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f3, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f3_reused);
    }
    return false;
  }
}
