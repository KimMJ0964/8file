/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.1.28
 * Generated at: 2024-10-14 02:16:00 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.views.course;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;

public final class sub_005fcourse_005fmain_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/WEB-INF/lib/jakarta.servlet.jsp.jstl-3.0.1.jar", Long.valueOf(1728863602318L));
    _jspx_dependants.put("jar:file:/C:/workspace/8_MyBatics/Skt/src/main/webapp/WEB-INF/lib/jakarta.servlet.jsp.jstl-3.0.1.jar!/META-INF/c-1_2.tld", Long.valueOf(1664421078000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems;

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.release();
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("    \r\n");
      out.write("    ");
 String contextPath = request.getContextPath(); 
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write(" <!--css-->\r\n");
      out.write("  <link rel=\"stylesheet\" href=\"");
      out.print(contextPath);
      out.write("/views/course/css/sub_course.css?after\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/views/common/menubar.jsp", out, false);
      out.write("\r\n");
      out.write("<br><br><br>\r\n");
      out.write("<div class=\"wrap\">\r\n");
      out.write("        <div id=\"search-form\">\r\n");
      out.write("        <form id=\"searchForm\" action=\"course.se\" method=\"post\">\r\n");
      out.write("            <table>\r\n");
      out.write("                <tr>\r\n");
      out.write("                    <th><p>지역별</p></th>\r\n");
      out.write("                    <td>\r\n");
      out.write("                        <div class=\"area\">\r\n");
      out.write("                            <input type=\"checkbox\" name=\"area\" id=\"seoul\" value=\"서울\">\r\n");
      out.write("                            <label for=\"seoul\">#서울</label>\r\n");
      out.write("                            <input type=\"checkbox\" name=\"area\" id=\"Gyeonggi\" value=\"경기도\">\r\n");
      out.write("                            <label for=\"Gyeonggi\">#경기</label>\r\n");
      out.write("                            <input type=\"checkbox\" name=\"area\" id=\"Gangwon \" value=\"경상도 \">\r\n");
      out.write("                            <label for=\"Gangwon \">#강원</label>\r\n");
      out.write("                            <input type=\"checkbox\" name=\"area\" id=\"Chungcheong\" value=\"충청도\">\r\n");
      out.write("                            <label for=\"Chungcheong\">#충청</label>\r\n");
      out.write("                            <input type=\"checkbox\" name=\"area\" id=\"Gyeongsangbuk\" value=\"경상도\">\r\n");
      out.write("                            <label for=\"Gyeongsangbuk\">#경상</label>\r\n");
      out.write("                            <input type=\"checkbox\" name=\"area\" id=\"Jeolla\" value=\"전라도\">\r\n");
      out.write("                            <label for=\"Jeolla\">#전라</label>\r\n");
      out.write("                            <input type=\"checkbox\" name=\"area\" id=\"Jeju \" value=\"제주도\">\r\n");
      out.write("                            <label for=\"Jeju \">#제주</label>\r\n");
      out.write("                        </div>\r\n");
      out.write("                    </td>\r\n");
      out.write("                </tr>\r\n");
      out.write("                \r\n");
      out.write("                <tr>\r\n");
      out.write("                    <th><p>테마별</p></th>\r\n");
      out.write("                    <td>\r\n");
      out.write("                        <div class=\"tema\">\r\n");
      out.write("                            <input type=\"checkbox\" name=\"theme\" id=\"history\" value=\"역사\">\r\n");
      out.write("                            <label for=\"history\">#역사</label>\r\n");
      out.write("                            <input type=\"checkbox\" name=\"theme\" id=\"city\" value=\"도시\">\r\n");
      out.write("                            <label for=\"city\">#도시</label>\r\n");
      out.write("                            <input type=\"checkbox\" name=\"theme\" id=\"natural\" value=\"자연\">\r\n");
      out.write("                            <label for=\"natural\">#자연</label>\r\n");
      out.write("                            <input type=\"checkbox\" name=\"theme\" id=\"art\" value=\"예술\">\r\n");
      out.write("                            <label for=\"art\">#예술</label>\r\n");
      out.write("                            <input type=\"checkbox\" name=\"theme\" id=\"healling\" value=\"힐링\">\r\n");
      out.write("                            <label for=\"healling\">#힐링</label>\r\n");
      out.write("                            <input type=\"checkbox\" name=\"theme\" id=\"dynamic\" value=\"다이나믹\">\r\n");
      out.write("                            <label for=\"dynamic\">#다이나믹</label>\r\n");
      out.write("                        </div>\r\n");
      out.write("                    </td>\r\n");
      out.write("                </tr>\r\n");
      out.write("            </table>\r\n");
      out.write("        </div>\r\n");
      out.write("        <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js\"></script>\r\n");
      out.write("        <script src=\"");
      out.print(contextPath);
      out.write("/views/course/js/sub_course-area.js?after\"></script>\r\n");
      out.write("           <div id=\"search\">   \r\n");
      out.write("                <input type=\"submit\" value=\"검색\">\r\n");
      out.write("           </div>\r\n");
      out.write("         </form> \r\n");
      out.write("         \r\n");
      out.write("        <div id=\"content-box\">\r\n");
      out.write("            <div class=\"list-box\" id=\"tour-content\">\r\n");
      out.write("            ");
      //  c:forEach
      org.apache.taglibs.standard.tag.rt.core.ForEachTag _jspx_th_c_005fforEach_005f0 = (org.apache.taglibs.standard.tag.rt.core.ForEachTag) _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.get(org.apache.taglibs.standard.tag.rt.core.ForEachTag.class);
      boolean _jspx_th_c_005fforEach_005f0_reused = false;
      try {
        _jspx_th_c_005fforEach_005f0.setPageContext(_jspx_page_context);
        _jspx_th_c_005fforEach_005f0.setParent(null);
        // /views/course/sub_course_main.jsp(72,12) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
        _jspx_th_c_005fforEach_005f0.setVar("c");
        // /views/course/sub_course_main.jsp(72,12) name = items type = jakarta.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
        _jspx_th_c_005fforEach_005f0.setItems(new org.apache.jasper.el.JspValueExpression("/views/course/sub_course_main.jsp(72,12) '${list}'",_jsp_getExpressionFactory().createValueExpression(_jspx_page_context.getELContext(),"${list}",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
        int[] _jspx_push_body_count_c_005fforEach_005f0 = new int[] { 0 };
        try {
          int _jspx_eval_c_005fforEach_005f0 = _jspx_th_c_005fforEach_005f0.doStartTag();
          if (_jspx_eval_c_005fforEach_005f0 != jakarta.servlet.jsp.tagext.Tag.SKIP_BODY) {
            do {
              out.write("\r\n");
              out.write("                <div id=\"list-con\">\r\n");
              out.write("                    <div id=\"list-img\">\r\n");
              out.write("                     <a href=\"");
              out.print(contextPath);
              out.write("/courseDetail.cs?cno=");
              out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${c.courseNo}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
              out.write("\">\r\n");
              out.write("                    <img src=\"./views/course/img/courseThumbnail/");
              out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ c.courseImg}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
              out.write("\" style=\"height: 300px; width: 300px;\">\r\n");
              out.write("                     </a>\r\n");
              out.write("                    </div>\r\n");
              out.write("                    <h3>");
              out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${c.courseName}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
              out.write("</h3>\r\n");
              out.write("                    <div id=\"under-area\">\r\n");
              out.write("                        <h5>");
              out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${c.courseArea}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
              out.write("</h5>\r\n");
              out.write("                        <button type=\"button\">\r\n");
              out.write("                            <img src=\"./views/sub2_TF/img/Like.png\" class=\"like(this)\" onclick=\"like(this)\">\r\n");
              out.write("                        </button>\r\n");
              out.write("                    </div>\r\n");
              out.write("                </div>\r\n");
              out.write("                ");
              int evalDoAfterBody = _jspx_th_c_005fforEach_005f0.doAfterBody();
              if (evalDoAfterBody != jakarta.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
                break;
            } while (true);
          }
          if (_jspx_th_c_005fforEach_005f0.doEndTag() == jakarta.servlet.jsp.tagext.Tag.SKIP_PAGE) {
            return;
          }
        } catch (java.lang.Throwable _jspx_exception) {
          while (_jspx_push_body_count_c_005fforEach_005f0[0]-- > 0)
            out = _jspx_page_context.popBody();
          _jspx_th_c_005fforEach_005f0.doCatch(_jspx_exception);
        } finally {
          _jspx_th_c_005fforEach_005f0.doFinally();
        }
        _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.reuse(_jspx_th_c_005fforEach_005f0);
        _jspx_th_c_005fforEach_005f0_reused = true;
      } finally {
        org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fforEach_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fforEach_005f0_reused);
      }
      out.write("\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("    	<br><br><br>\r\n");
      out.write("    	");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/views/common/footer.jsp", out, false);
      out.write("\r\n");
      out.write("        <script>\r\n");
      out.write("            // 좋아요 버튼 클릭 시 해당 이미지 변경\r\n");
      out.write("            function like(element) {\r\n");
      out.write("                if (element.src.includes(\"Like_r.png\")) {\r\n");
      out.write("                    element.src = \"./views/sub2_TF/img/Like.png\";\r\n");
      out.write("                } else {\r\n");
      out.write("                    element.src = \"./views/sub2_TF/img/Like_r.png\";\r\n");
      out.write("                }\r\n");
      out.write("            }\r\n");
      out.write("        </script>\r\n");
      out.write("\r\n");
      out.write("    </div>\r\n");
      out.write("    \r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
