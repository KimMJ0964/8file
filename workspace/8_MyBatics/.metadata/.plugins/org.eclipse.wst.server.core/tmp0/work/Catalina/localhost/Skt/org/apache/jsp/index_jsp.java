/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.1.28
 * Generated at: 2024-10-14 01:03:25 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;
import common.PageInfo;
import java.util.ArrayList;
import com.skt.board.model.vo.Board;

public final class index_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/WEB-INF/lib/jakarta.servlet.jsp.jstl-3.0.1.jar", Long.valueOf(1728863602318L));
    _jspx_dependants.put("jar:file:/C:/workspace/8_MyBatics/Skt/src/main/webapp/WEB-INF/lib/jakarta.servlet.jsp.jstl-3.0.1.jar!/META-INF/c-1_2.tld", Long.valueOf(1664421078000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = new java.util.LinkedHashSet<>(4);
    _jspx_imports_classes.add("common.PageInfo");
    _jspx_imports_classes.add("com.skt.board.model.vo.Board");
    _jspx_imports_classes.add("java.util.ArrayList");
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

String contextPath = request.getContextPath();

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"ko\">\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("<title>커뮤니티</title>\r\n");
      out.write("\r\n");
      out.write("<!-- Latest compiled and minified CSS -->\r\n");
      out.write("<link\r\n");
      out.write("   href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css\"\r\n");
      out.write("   rel=\"stylesheet\">\r\n");
      out.write("\r\n");
      out.write("<!-- Latest compiled JavaScript -->\r\n");
      out.write("<script\r\n");
      out.write("   src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js\"></script>\r\n");
      out.write("<link\r\n");
      out.write("   href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css\"\r\n");
      out.write("   rel=\"stylesheet\"\r\n");
      out.write("   integrity=\"sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH\"\r\n");
      out.write("   crossorigin=\"anonymous\">\r\n");
      out.write("<link rel=\"stylesheet\" href=\"../menubar footer/menubar.css\">\r\n");
      out.write("<link rel=\"stylesheet\" href=\"./mainPage.css?after\">\r\n");
      out.write("\r\n");
      out.write("<script\r\n");
      out.write("   src=\"https://cdn.jsdelivr.net/npm/@popperjs/core@2.11.8/dist/umd/popper.min.js\"\r\n");
      out.write("   integrity=\"sha384-I7E8VVD/ismYTF4hNIPjVp/Zjvgyol6VFvRkX/vR+Vc4jQkC+hVqc2pM8ODewa9r\"\r\n");
      out.write("   crossorigin=\"anonymous\"></script>\r\n");
      out.write("<script\r\n");
      out.write("   src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.min.js\"\r\n");
      out.write("   integrity=\"sha384-0pUGZvbkm6XF6gxjEnlmuGrJXVbNuzT9qBBavbLwCsOGabYfZo0T0to5eqruptLy\"\r\n");
      out.write("   crossorigin=\"anonymous\"></script>\r\n");
      out.write("<script src=\"https://code.jquery.com/jquery-3.6.0.min.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"https://oapi.map.naver.com/openapi/v3/maps.js?ncpClientId=3643b6hh5b\"></script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("   ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/views/common/menubar.jsp", out, false);
      out.write("\r\n");
      out.write("   <br><br><br>\r\n");
      out.write("   <div class=\"container\">\r\n");
      out.write("      <div id=\"media-section\">\r\n");
      out.write("         <div id=\"title\">\r\n");
      out.write("            <span class=\"title-font\" style=\"font-size: 24px; font-weight: 800;\">♬ 영상으로 즐기는 계절 축제 ♪</span>\r\n");
      out.write("         </div>\r\n");
      out.write("\r\n");
      out.write("         <div class=\"hiperlink-container\">\r\n");
      out.write("            <div class=\"hiperlink\">\r\n");
      out.write("               <iframe class=\"media\" width=\"410\" height=\"225\"\r\n");
      out.write("                  src=\"https://www.youtube.com/embed/zPNwGulo3ts?si=3eFTPjG2E9MIJb50\"\r\n");
      out.write("                  title=\"YouTube video player\" frameborder=\"0\"\r\n");
      out.write("                  allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\"\r\n");
      out.write("                  referrerpolicy=\"strict-origin-when-cross-origin\" allowfullscreen></iframe>\r\n");
      out.write("\r\n");
      out.write("               <iframe class=\"media\" width=\"410\" height=\"225\"\r\n");
      out.write("                  src=\"https://www.youtube.com/embed/xyh_0wTokh8?si=tlyUCt6h4kHTYXeu\"\r\n");
      out.write("                  title=\"YouTube video player\" frameborder=\"0\"\r\n");
      out.write("                  allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\"\r\n");
      out.write("                  referrerpolicy=\"strict-origin-when-cross-origin\" allowfullscreen></iframe>\r\n");
      out.write("               <iframe width=\"410\" height=\"225\" src=\"https://www.youtube.com/embed/7LRJSCZq_D8?si=SM94lc4aWjZUdz34\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" referrerpolicy=\"strict-origin-when-cross-origin\" allowfullscreen></iframe>\r\n");
      out.write("\r\n");
      out.write("               <iframe width=\"410\" height=\"225\" src=\"https://www.youtube.com/embed/XN227v4-w1s?si=pfk6_vu3wKfmeYrv\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" referrerpolicy=\"strict-origin-when-cross-origin\" allowfullscreen></iframe>\r\n");
      out.write("               \r\n");
      out.write("               \r\n");
      out.write("            </div>\r\n");
      out.write("\r\n");
      out.write("            \r\n");
      out.write("            </div>\r\n");
      out.write("         </div>\r\n");
      out.write("      </div>\r\n");
      out.write("      <br> <br>\r\n");
      out.write("      <div class=\"map-sidebar-container\">\r\n");
      out.write("         <!-- 지도 영역 -->\r\n");
      out.write("         <div id=\"map\"></div>\r\n");
      out.write("\r\n");
      out.write("         <!-- 관광 명소 리스트 영역 -->\r\n");
      out.write("         <div class=\"sidebar\">\r\n");
      out.write("            <h2 align=\"center\" style=\"font-weight: 800;\">인기관광명소 위치 찾기</h2>\r\n");
      out.write("            <!-- 인기 관광 명소 리스트 -->\r\n");
      out.write("             <ul id=\"topTouristsList\"></ul>\r\n");
      out.write("            <div class=\"footer-link\">\r\n");
      out.write("               <a href=\"");
      out.print(contextPath );
      out.write("/tourfestivallist.tf?cpage=1\">여러 관광지 보러가기 &gt;</a>\r\n");
      out.write("            </div>\r\n");
      out.write("         </div>\r\n");
      out.write("      </div>\r\n");
      out.write("      <!-- 계절별 관광지 보기 링크 -->\r\n");
      out.write("\r\n");
      out.write("      <div class=\"tab_content\">\r\n");
      out.write("         <input type=\"radio\" name=\"tabmenu\" id=\"tab01\"> <label\r\n");
      out.write("            for=\"tab01\">추천 관광명소</label> <input type=\"radio\" name=\"tabmenu\"\r\n");
      out.write("            id=\"tab02\" checked> <label for=\"tab02\">인기축제</label> <input\r\n");
      out.write("            type=\"radio\" name=\"tabmenu\" id=\"tab03\"> <label for=\"tab03\">축제\r\n");
      out.write("            MBTI</label> <input type=\"radio\" name=\"tabmenu\" id=\"tab04\"> <label\r\n");
      out.write("            for=\"tab04\">지역 룰렛</label>\r\n");
      out.write("\r\n");
      out.write("         <div class=\"conbox con1\">\r\n");
      out.write("         <br>\r\n");
      out.write("            <h1>TRAFI의 인기 관광명소</h1>\r\n");
      out.write("            <div id=\"pop-tour\">\r\n");
      out.write("            </div>\r\n");
      out.write("         </div>\r\n");
      out.write("         <div class=\"conbox con2\">\r\n");
      out.write("            <div class=\"group\">\r\n");
      out.write("                \r\n");
      out.write("              </div>\r\n");
      out.write("        </div>\r\n");
      out.write("        <script src='https://unpkg.co/gsap@3/dist/gsap.min.js'></script>\r\n");
      out.write("        <script  src=\"./content02.js\"></script>\r\n");
      out.write("        <div class=\"conbox con3\">\r\n");
      out.write("           <br>\r\n");
      out.write("            <img src=\"./views/mbti/img/banner.png\" style=\"height: 300px;\">\r\n");
      out.write("            <h1>나와 맞는 축제는?</h1>\r\n");
      out.write("           <button onclick=\"location.href='");
      out.print(contextPath );
      out.write("/intoMbti.co'\">축제 MBTI 하러 가기</button>\r\n");
      out.write("        </div>\r\n");
      out.write("        <div class=\"conbox con4\">\r\n");
      out.write("            <h1>어디로 떠나야할 지 모를 때?</h1>\r\n");
      out.write("            <button onclick=\"getRandomArea()\">지역 룰렛 돌리기</button>\r\n");
      out.write("            <div id=\"area-result\">\r\n");
      out.write("                <p id=\"area-text\"></p><h1> 가자!</h1>\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("      <br>\r\n");
      out.write("      <br>\r\n");
      out.write("      <br>\r\n");
      out.write("      <br>\r\n");
      out.write("      <br>\r\n");
      out.write("      <br>\r\n");
      out.write("      <br>\r\n");
      out.write("      <br>\r\n");
      out.write("      <br>\r\n");
      out.write("      <br>\r\n");
      out.write("      <br>\r\n");
      out.write("      <div id=\"bottom-section\" align=\"center\">\r\n");
      out.write("         <h1 style=\"font-size: 80px; font-weight: bold; color:gray;\">로그인하고 여행가자 !</h1><br>\r\n");
      out.write("         <button id=\"bottom-login-btn\" style=\"margin-top:50px; background-color: #FFC3C3;\r\n");
      out.write("               width: 600px; height: 75px; color: white; border-radius: 10px; font-size: 30px; border-style: none;\">로그인</button>\r\n");
      out.write("               <br><br><br><br><br><br><br><br><br><br><br>\r\n");
      out.write("		<div id=\"footer\">\r\n");
      out.write("			<div id=\"footer_1\">\r\n");
      out.write("				<a href=\"\">이용약관</a> | <a href=\"\">개인정보처리방침</a> | <a href=\"\">위치기반서비스이용약관</a>\r\n");
      out.write("				| <a href=\"\">저작권정책</a> | <a href=\"\">Q&A</a>\r\n");
      out.write("			</div>\r\n");
      out.write("			<div id=\"footer_2\">\r\n");
      out.write("				<p>KH정보교육원 ｜ 사업자등록번호 : 980-86-2633 ｜ 사업자등록번호 : 285-40-7633 ｜ 서울\r\n");
      out.write("					강남 제2014-01호 ｜ 대표자 : 김가영 ｜ 책임자 : 김민재 ｜ 개인정보관리책임자 : 신서희</p>\r\n");
      out.write("				<p>\r\n");
      out.write("					강남지원 256관 : 서울특별시 강남구 테헤란로14길 6 남도빌딩 2F, 3F, 4F, 5F, 6F <br>\r\n");
      out.write("					강남지원 2관 : 서울특별시 강남구 테헤란로10길 9 그랑프리 빌딩 4F, 5F, 7F <br> 강남지원 3관\r\n");
      out.write("					: 서울특별시 강남구 테헤란로 130 호산빌딩 5F, 6F <br> 종로지원 : 서울특별시 중구 남대문로 120\r\n");
      out.write("					그레이츠 청계(구 대일빌딩) 2F, 3F <br> 당산지원 : 서울특별시 영등포구 선유동2로 57\r\n");
      out.write("					이레빌딩(구관) 19F, 20F <br>\r\n");
      out.write("				</p>\r\n");
      out.write("			<div id=\"footer-info\">\r\n");
      out.write("               <!--  <img src=\"");
      out.print(contextPath );
      out.write("/resource/footerLogo.png\" alt=\"Trafi Logo\" id=\"footer-logo\"> 	-->\r\n");
      out.write("            </div>\r\n");
      out.write("				<p>Copyright © 2024-2024 Trafi Information Educational Institute\r\n");
      out.write("					All Right Reserved</p>\r\n");
      out.write("			</div>\r\n");
      out.write("		</div>\r\n");
      out.write("      </div>\r\n");
      out.write("      </div>\r\n");
      out.write("   </div>\r\n");
      out.write("   <br>\r\n");
      out.write("   <script  src=\"./mainPage.js\"></script>\r\n");
      out.write("    <script>\r\n");
      out.write("        $(document).ready(function(){\r\n");
      out.write("           var allTourists = [];\r\n");
      out.write("            $.ajax({\r\n");
      out.write("                url: \"touristRank.mp\",\r\n");
      out.write("                method: \"GET\",\r\n");
      out.write("                dataType: \"json\",\r\n");
      out.write("                success: function(data) {\r\n");
      out.write("                    var list = $('#topTouristsList');\r\n");
      out.write("                    list.empty(); // 기존 리스트 비우기\r\n");
      out.write("\r\n");
      out.write("                    // 첫 6개 데이터만 출력\r\n");
      out.write("                    var topSixTourists = data.slice(0, 6); // 데이터의 첫 6개 항목 선택\r\n");
      out.write("               var number = 1;\r\n");
      out.write("                    \r\n");
      out.write("                    topSixTourists.forEach(function(tourist) {\r\n");
      out.write("                        list.append(\r\n");
      out.write("                                  '<li class=\"tour-li-item\" data-lat=\"' + tourist.tourLat + '\" data-lng=\"' + tourist.tourLong + '\">' \r\n");
      out.write("                                  + number + \"위 ▷ \" + tourist.tourName + '</li><br>'\r\n");
      out.write("                              ); // TOUR_NAME, tourLat, tourLong 출력\r\n");
      out.write("                              number = number + 1;\r\n");
      out.write("                    });\r\n");
      out.write("                },\r\n");
      out.write("                error: function(jqXHR, textStatus, errorThrown) {\r\n");
      out.write("                    console.error('Error fetching top tourists:', textStatus, errorThrown);\r\n");
      out.write("                }\r\n");
      out.write("            });\r\n");
      out.write("            \r\n");
      out.write("            $.ajax({\r\n");
      out.write("                url: \"touristRankTwo.mp\",\r\n");
      out.write("                method: \"GET\",\r\n");
      out.write("                dataType: \"json\",\r\n");
      out.write("                success: function(data) {\r\n");
      out.write("                    // 데이터 병합\r\n");
      out.write("                    allTourists = allTourists.concat(data.slice(0, 4)); // 첫 4개 데이터 추가\r\n");
      out.write("                    updateTourDisplay();\r\n");
      out.write("                },\r\n");
      out.write("                error: function(jqXHR, textStatus, errorThrown) {\r\n");
      out.write("                    console.error('Error fetching top tourists:', textStatus, errorThrown);\r\n");
      out.write("                }\r\n");
      out.write("            });\r\n");
      out.write("\r\n");
      out.write("            // 투어 이름을 업데이트하는 함수\r\n");
      out.write("            function updateTourDisplay() {\r\n");
      out.write("                var popTourDiv = $('#pop-tour');\r\n");
      out.write("                popTourDiv.empty(); // 기존 내용 비우기\r\n");
      out.write("\r\n");
      out.write("                allTourists.slice(0, 4).forEach(function(tourist, index) {\r\n");
      out.write("                    // 조건문을 사용하여 첫 번째, 두 번째, 세 번째, 네 번째 경우를 다르게 처리\r\n");
      out.write("                    if (index === 0) {\r\n");
      out.write("                        popTourDiv.append('<div id=\"first-tour\" class=\"item-01\" style=\"height: 40%;\"><div class=\"up-line01\"  style=\"height: 200px;\"> <div class=\"photo01\"><a href=\"detail.tf?tno=' + tourist.tourNo + '\"><img src=\"./resource/tourThumb/'+ tourist.tourImg +'\" height=\"190px\" width=\"190px\"></a></div><div class=\"desc01\"><h1>#' + tourist.tourTema + '</h1><br><h3>' + tourist.tourName + '</h3><h5>' + tourist.tourArea + '</h5></div> </div><div class=\"under-line01\"></div></div>');\r\n");
      out.write("                    } else if (index === 1) {\r\n");
      out.write("                       popTourDiv.append('<div id=\"second-tour\" class=\"item-01\" style=\"height: 40%;\"><div class=\"up-line01\" style=\"height: 200px;\"> <div class=\"photo01\"><a href=\"detail.tf?tno=' + tourist.tourNo + '\"><img src=\"./resource/tourThumb/'+ tourist.tourImg +'\" height=\"190px\" width=\"190px\"></a></div><div class=\"desc01\"><h1>#' + tourist.tourTema + '</h1><br><h3>' + tourist.tourName + '</h3><h5>' + tourist.tourArea + '</h5></div> </div><div class=\"under-line01\"></div></div>');\r\n");
      out.write("                    } else if (index === 2) {\r\n");
      out.write("                       popTourDiv.append('<div id=\"third-tour\" class=\"item-02\" style=\"height: 40%;\"><div class=\"up-line02\" style=\"height: 200px;\"> <div class=\"photo02\"><a href=\"detail.tf?tno=' + tourist.tourNo + '\"><img src=\"./resource/tourThumb/'+ tourist.tourImg +'\"  height=\"190px\" width=\"190px\"></a></div><div class=\"desc02\"><h1>#' + tourist.tourTema + '</h1><br><h3>' + tourist.tourName + '</h3><h5>' + tourist.tourArea + '</h5></div> </div><div class=\"under-line02\"></div></div>');\r\n");
      out.write("                    } else if (index === 3) {\r\n");
      out.write("                       popTourDiv.append('<div id=\"fourth-tour\" class=\"item-02\" style=\"height: 40%;\"><div class=\"up-line02\" style=\"height: 200px;\"> <div class=\"photo02\"><a href=\"detail.tf?tno=' + tourist.tourNo + '\"><img src=\"./resource/tourThumb/'+ tourist.tourImg +'\" height=\"190px\" width=\"190px\"></a></div><div class=\"desc02\"><h1>#' + tourist.tourTema + '</h1><br><h3>' + tourist.tourName + '</h3><h5>' + tourist.tourArea + '</h5></div> </div><div class=\"under-line02\"></div></div>');\r\n");
      out.write("                    }\r\n");
      out.write("                });\r\n");
      out.write("            }\r\n");
      out.write("            \r\n");
      out.write("            $.ajax({\r\n");
      out.write("                url: \"festivalIntro.mp\",\r\n");
      out.write("                method: \"GET\",\r\n");
      out.write("                dataType: \"json\",\r\n");
      out.write("                success: function(data) {\r\n");
      out.write("                    var list = $('.group');\r\n");
      out.write("                    list.empty(); // 기존 리스트 비우기\r\n");
      out.write("\r\n");
      out.write("                    // 첫 6개 데이터만 출력\r\n");
      out.write("                    var topFourFestivals = data.slice(0, 4); // 데이터의 첫 6개 항목 선택\r\n");
      out.write("\r\n");
      out.write("                    topFourFestivals.forEach(function(festival) {\r\n");
      out.write("                        list.append('<div class=\"item\"><div class=\"img-con\" ><a href=\"fesdatail.tf?fno='+ festival.fsNo +'\"><img src=\"./resource/festival/'+ festival.fsImg +'\" alt=\"\" style=\"height: 250px;\" /></a></div><div class=\"text-con\"><h1>' + festival.fsName + '</h1><h3>' + festival.fsArea + '</h3><h5>#'+ festival.fsTema +'</h5></div> </div>'); // TOUR_NAME 출력\r\n");
      out.write("                    });\r\n");
      out.write("                },\r\n");
      out.write("                error: function(jqXHR, textStatus, errorThrown) {\r\n");
      out.write("                    console.error('Error fetching top tourists:', textStatus, errorThrown);\r\n");
      out.write("                }\r\n");
      out.write("            });\r\n");
      out.write("        });\r\n");
      out.write("        \r\n");
      out.write("        document.getElementById(\"bottom-login-btn\").addEventListener(\"click\", function() {\r\n");
      out.write("            location.href = \"");
      out.print( contextPath );
      out.write("/intoLogin.co\";\r\n");
      out.write("        });\r\n");
      out.write("        \r\n");
      out.write("        const areas = [\r\n");
      out.write("           \"서울로\",\r\n");
      out.write("           \"부산으로\",\r\n");
      out.write("           \"제주도로\",\r\n");
      out.write("           \"강릉으로\",\r\n");
      out.write("           \"경주로\",\r\n");
      out.write("           \"전주로\",\r\n");
      out.write("           \"대구로\",\r\n");
      out.write("           \"인천으로\",\r\n");
      out.write("           \"광주로\",\r\n");
      out.write("           \"포항으로\"];\r\n");
      out.write("\r\n");
      out.write("        function getRandomArea() {\r\n");
      out.write("           const randomIndex = Math.floor(Math.random() * areas.length);\r\n");
      out.write("           const selectedArea = areas[randomIndex];\r\n");
      out.write("           document.getElementById(\"area-text\").innerText = selectedArea;\r\n");
      out.write("           \r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("        var currentMarker = null;\r\n");
      out.write("        \r\n");
      out.write("        $(document).on('click', '.tour-li-item', function() {\r\n");
      out.write("            // 모든 <li>의 글씨를 기본 상태로 설정\r\n");
      out.write("            $('.tour-li-item').css('font-weight', 'normal');\r\n");
      out.write("            \r\n");
      out.write("            // 클릭한 <li>의 글씨만 굵게 설정\r\n");
      out.write("            $(this).css('font-weight', '800');\r\n");
      out.write("            \r\n");
      out.write("            var lat = $(this).data('lat');\r\n");
      out.write("            var lng = $(this).data('lng');\r\n");
      out.write("            \r\n");
      out.write("            // 새로운 중심 좌표 생성\r\n");
      out.write("            var newCenter = new naver.maps.LatLng(lat, lng);\r\n");
      out.write("            \r\n");
      out.write("            // 지도의 중심 좌표를 클릭한 관광지의 좌표로 변경\r\n");
      out.write("            map.setCenter(newCenter);\r\n");
      out.write("            \r\n");
      out.write("            // 기존 마커가 있다면 삭제\r\n");
      out.write("            if (currentMarker) {\r\n");
      out.write("                currentMarker.setMap(null);\r\n");
      out.write("            }\r\n");
      out.write("\r\n");
      out.write("            // 새로운 마커 생성\r\n");
      out.write("            currentMarker = new naver.maps.Marker({\r\n");
      out.write("                position: newCenter,\r\n");
      out.write("                map: map\r\n");
      out.write("            });\r\n");
      out.write("        });\r\n");
      out.write("        \r\n");
      out.write("        var map = new naver.maps.Map('map', {\r\n");
      out.write("            center: new naver.maps.LatLng(37.5665, 126.9780),  // 초기 좌표 (서울)\r\n");
      out.write("            zoom: 10\r\n");
      out.write("        });\r\n");
      out.write("\r\n");
      out.write("    </script>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
