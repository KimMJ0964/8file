/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.1.28
 * Generated at: 2024-10-14 08:07:10 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.views.mbti;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;

public final class sub_005ftest_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/WEB-INF/lib/jakarta.servlet.jsp.jstl-3.0.1.jar", Long.valueOf(1728863602318L));
    _jspx_dependants.put("jar:file:/C:/workspace/8_MyBatics/Skt/src/main/webapp/WEB-INF/lib/jakarta.servlet.jsp.jstl-3.0.1.jar!/META-INF/c-1_2.tld", Long.valueOf(1664421078000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");

   String contextPath = request.getContextPath();

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.1/dist/css/bootstrap.min.css\" rel=\"stylesheet\" integrity=\"sha384-4bw+/aepP/YC94hEpVNVgiZdgIC5+VKNBQNGCHeKRQN+PtmoHDEXuppvnDJzQIu9\" crossorigin=\"anonymous\">\r\n");
      out.write("  <link rel=\"stylesheet\" type=\"text/css\" href=\"./views/mbti/css/sub_test.css?after\">\r\n");
      out.write("  <link rel=\"stylesheet\" type=\"text/css\" href=\"./views/mbti/css/sub_test_animation.css\">\r\n");
      out.write("  \r\n");
      out.write("  <style>\r\n");
      out.write("  body {\r\n");
      out.write("     padding-bottom: 0;\r\n");
      out.write("  }\r\n");
      out.write("  \r\n");
      out.write("  </style>\r\n");
      out.write("</head>\r\n");
      out.write("<body class=\"body\">\r\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/views/common/menubar.jsp", out, false);
      out.write("\r\n");
      out.write("  <br><br><br>\r\n");
      out.write("  <div class=\"test-container\">\r\n");
      out.write("    <section id=\"main\">\r\n");
      out.write("    <div class=\"imgbanner\">\r\n");
      out.write("      <img src=\"./views/mbti/img/banner.png\" alt=\"\">\r\n");
      out.write("     </div>\r\n");
      out.write("\r\n");
      out.write("      \r\n");
      out.write("\r\n");
      out.write("      \r\n");
      out.write("      <button type=\"button\" class=\"btn btn-outline-info\" onclick=\"js:begin()\">축BTI 시작하기</button>\r\n");
      out.write("    </section>\r\n");
      out.write("\r\n");
      out.write("    <section id=\"qna\">\r\n");
      out.write("      <div class=\"status\">\r\n");
      out.write("        <div class=\"statusBar\">\r\n");
      out.write("         \r\n");
      out.write("        </div>\r\n");
      out.write("\r\n");
      out.write("      </div>\r\n");
      out.write("      <div class=\"qBox\">\r\n");
      out.write("\r\n");
      out.write("      </div>\r\n");
      out.write("      <div class=\"answerBox\">\r\n");
      out.write("\r\n");
      out.write("      </div>\r\n");
      out.write("    </section>\r\n");
      out.write("    <section id=\"result\" class=\"mx-auto py-5 px-3\">\r\n");
      out.write("      <h3>나와 어울리는 축제는</h3>\r\n");
      out.write("      <div class=\"resultname\"></div>\r\n");
      out.write("      <div id=\"resultImg\">\r\n");
      out.write("      \r\n");
      out.write("      </div>\r\n");
      out.write("      <ul>\r\n");
      out.write("        <li><div class=\"resulttag1\"></div></li>\r\n");
      out.write("        <li><div class=\"resulttag2\"></div></li>\r\n");
      out.write("        <li><div class=\"resulttag3\"></div></li>\r\n");
      out.write("      </ul>\r\n");
      out.write("      <div class=\"resultDesc\"></div>\r\n");
      out.write("      <br>\r\n");
      out.write("      <div class=\"resultDesc1\"></div>\r\n");
      out.write("      <div id=\"family\">\r\n");
      out.write("        <p>많은 축제가 당신을 기다리고있어요!</p>\r\n");
      out.write("        <h1><b>축제를 즐기러 가볼까요?</b></h1>\r\n");
      out.write("        <button onclick =\"location.href='#'\">당신과 맞는 축제</button>\r\n");
      out.write("      </div>\r\n");
      out.write("      <button type=\"button\" class=\"return\" onclick=\"location.href='");
      out.print(contextPath );
      out.write("/intoMbti.co'\">테스트 다시하기</button>\r\n");
      out.write("    </section>\r\n");
      out.write("    <script src=\"./views/mbti/js/sub_test.js\"></script>\r\n");
      out.write("    <script src=\"./views/mbti/js/sub_test_data.js\" charset=\"utf-8\"></script>\r\n");
      out.write("    <script src=\"./views/mbti/js/sub_test_start.js\" charset=\"utf-8\"></script>\r\n");
      out.write("    <script src=\"./views/mbti/js/sub_test_share.js\" charset=\"utf-8\"></script>\r\n");
      out.write("  </div>\r\n");
      out.write("  <br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br>\r\n");
      out.write("   ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/views/common/footer.jsp", out, false);
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
